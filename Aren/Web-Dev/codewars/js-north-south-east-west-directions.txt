//My Correct Answer
function dirReduc(arr){

    for(let i = 0; i < arr.length; i++){

        if( (arr[i] == "NORTH" && arr[i+1] == "SOUTH") || (arr[i] == "SOUTH" && arr[i+1] == "NORTH") ){
            delete arr[i];
            delete arr[i+1];
        }
        else if( (arr[i] == "EAST" && arr[i+1] == "WEST")  || (arr[i] == "WEST" && arr[i+1] == "EAST") ){
            delete arr[i];
            delete arr[i+1];
        }
    }
    let exit = true;

    while(exit) {

        exit = false;

        for (let i = 0; i < arr.length; i++) {

            if ((arr[i] == "NORTH" && arr[i + 1] == null) || (arr[i] == "SOUTH" && arr[i + 1] == null)) {
                let tmp = i;
                tmp++;
                while (arr[tmp + 1] == null && tmp + 1 < arr.length) {
                    tmp++;
                    if (arr[i] == "NORTH" && arr[tmp + 1] == "SOUTH") {
                        delete arr[i];
                        delete arr[tmp + 1];
                        exit = true;
                    }
                    else if (arr[i] == "SOUTH" && arr[tmp + 1] == "NORTH") {
                        delete arr[i];
                        delete arr[tmp + 1];
                        exit = true;
                    }
                }
            }
            else if ((arr[i] == "EAST" && arr[i + 1] == null) || (arr[i] == "WEST" && arr[i + 1] == null)) {
                let tmp = i;
                tmp++;
                while (arr[tmp + 1] == null && tmp + 1 < arr.length) {
                    tmp++;
                    if (arr[i] == "EAST" && arr[tmp + 1] == "WEST") {
                        delete arr[i];
                        delete arr[tmp + 1];
                        exit = true;
                    }
                    else if (arr[i] == "WEST" && arr[tmp + 1] == "EAST") {
                        delete arr[i];
                        delete arr[tmp + 1];
                        exit = true;
                    }
                }
            }
        }
    }
    let newarr = [];
    let count = 0;

    for(let j = 0; j < arr.length; j++){

        if(arr[j] == null){

        }
        else{
            newarr[count] = arr[j];
            count++;
        }
    }
    return newarr;
}

//Another Correct Answer
function dirReduc(plan) {
  var opposite = {
    'NORTH': 'SOUTH', 'EAST': 'WEST', 'SOUTH': 'NORTH', 'WEST': 'EAST'};
  return plan.reduce(function(dirs, dir){
      if (dirs[dirs.length - 1] === opposite[dir])
        dirs.pop();
      else
        dirs.push(dir);
      return dirs;
    }, []);
}

//Another Correct Answer
function dirReduc(arr) {
  var str = arr.join(''), pattern = /NORTHSOUTH|EASTWEST|SOUTHNORTH|WESTEAST/;
  while (pattern.test(str)) str = str.replace(pattern,'');
  return str.match(/(NORTH|SOUTH|EAST|WEST)/g)||[];
}

//Another Correct Answer
function isOppo(dir1,dir2) {
    if (dir1 + dir2 === 'SOUTHNORTH') return true;
    if (dir1 + dir2 === 'NORTHSOUTH') return true;
    if (dir1 + dir2 === 'EASTWEST') return true;
    if (dir1 + dir2 === 'WESTEAST') return true;
    return false;
}
  
function dirReduc(arr){
  var len = arr.length
  for (var i = 0; i < len - 1; i++) {
    if (isOppo(arr[i], arr[i+1])) {
      arr.splice(i,2);
      return dirReduc(arr);
    }
  }
  return arr;
}

//Another Correct Answer
function dirReduc(arr){
  var opposite = { "SOUTH":"NORTH", "NORTH":"SOUTH", "WEST":"EAST", "EAST":"WEST"}
  return arr.reduce(function (a, b, i) {
    opposite[a.slice(-1)] === b ? a.pop() : a.push(b)
    return a
  }, [])
}

//Another Correct Answer
function dirReduc(arr){
  var oppositeDirections = {
    NORTH: 'SOUTH',
    SOUTH: 'NORTH',
    WEST: 'EAST',
    EAST: 'WEST'
  };
  var directions = arr.slice(0);
  for (var i = 0; i < directions.length - 1;) {
    if (oppositeDirections[directions[i]] === directions[i+1]) {
      directions.splice(i, 2);
      i = (i === 0) ? 0 : i - 1;
    } else {
      i += 1;
    }
  }
  return directions;
}